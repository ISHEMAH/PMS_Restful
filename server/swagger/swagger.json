{
  "openapi": "3.0.0",
  "info": {
    "title": "Parking Management System API",
    "version": "1.0.0",
    "description": "API documentation for the Parking Management System"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" },
                  "name": { "type": "string" }
                },
                "required": ["email", "password", "name"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User created successfully" },
          "400": { "description": "Invalid input" },
          "409": { "description": "User already exists" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/auth/create-admin": {
      "post": {
        "summary": "Create admin user (only for Postman with admin-secret)",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" },
                  "name": { "type": "string" }
                },
                "required": ["email", "password", "name"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Admin created successfully" },
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/vehicles": {
      "post": {
        "summary": "Create a new vehicle",
        "tags": ["Vehicles"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "licensePlate": { "type": "string" },
                  "type": { "type": "string" },
                  "color": { "type": "string" }
                },
                "required": ["licensePlate", "type", "color"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Vehicle created" },
          "400": { "description": "Invalid input" }
        }
      },
      "get": {
        "summary": "Get all vehicles",
        "tags": ["Vehicles"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of vehicles" }
        }
      }
    },
    "/api/vehicles/:id": {
      "patch": {
        "summary": "Update vehicle information",
        "tags": ["Vehicles"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "licensePlate": { "type": "string" },
                  "type": { "type": "string" },
                  "color": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Vehicle updated" },
          "404": { "description": "Vehicle not found" }
        }
      },
      "delete": {
        "summary": "Delete a vehicle",
        "tags": ["Vehicles"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Vehicle deleted" },
          "404": { "description": "Vehicle not found" }
        }
      }
    },
    "/api/bookings": {
      "post": {
        "summary": "Book a parking slot",
        "tags": ["Bookings"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vehicleId": { "type": "string" },
                  "slotId": { "type": "integer" },
                  "startTime": { "type": "string", "format": "date-time" },
                  "endTime": { "type": "string", "format": "date-time" }
                },
                "required": ["vehicleId", "slotId", "startTime", "endTime"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Booking created" },
          "400": { "description": "Invalid input" },
          "404": { "description": "Slot or vehicle not found" }
        }
      }
    },
    "/api/admin/bookings": {
      "get": {
        "summary": "Get all bookings",
        "tags": ["Admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of bookings" }
        }
      }
    },
    "/api/admin/bookings/:bookingId/approve": {
      "put": {
        "summary": "Approve a booking",
        "tags": ["Admin"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { 
            "name": "bookingId", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Booking approved" },
          "404": { "description": "Booking not found" }
        }
      }
    },
    "/api/admin/bookings/:bookingId/decline": {
      "put": {
        "summary": "Decline a booking",
        "tags": ["Admin"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { 
            "name": "bookingId", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Booking declined" },
          "404": { "description": "Booking not found" }
        }
      }
    },
    "/api/checkout/:bookingId": {
      "post": {
        "summary": "Checkout a vehicle",
        "tags": ["Checkout"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { 
            "name": "bookingId", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Vehicle checked out" },
          "404": { "description": "Booking not found" },
          "500": { "description": "Failed to checkout vehicle" }
        }
      }
    },
    "/api/admin/history": {
      "get": {
        "summary": "Get parking history",
        "tags": ["Admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Parking history" }
        }
      }
    },
    "/api/analytics": {
      "get": {
        "summary": "Get analytics data",
        "tags": ["Analytics"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Analytics data" }
        }
      }
    }
  }
}
